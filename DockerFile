# Use an official Python runtime as a parent image, ensuring compatibility with Python 3.8
FROM python:3.8-slim

# Set the working directory in the container
WORKDIR /usr/src/app

# Copy the current directory contents into the container at /usr/src/app
COPY . /usr/src/app

# Install system dependencies for ROS and Python
RUN apt-get update && \
    apt-get install -y python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential curl lsb-release gnupg2 && \
    apt-get clean all

# Install and setup ROS (replace 'noetic' with your ROS version if necessary)
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && \
    apt-get update && \
    apt-get install -y ros-noetic-desktop-full

# Initialize rosdep
RUN rosdep init && \
    rosdep update

# Setup the ROS environment
RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc && \
    /bin/bash -c "source ~/.bashrc"

# Upgrade pip and install Python dependencies from requirements.txt
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Expose the port the app runs on, if necessary
EXPOSE 8000

# Define environment variable
ENV NAME SephsBiome

# Add an argument to control whether to run setup_sephsbiome.sh
ARG RUN_SETUP_SCRIPT=false

# Conditional execution of the setup script
RUN if [ "$RUN_SETUP_SCRIPT" = "true" ] ; then ./setup_sephsbiome.sh ; fi

# Run app.py when the container launches
CMD ["python3", "./main.py"]